如何实现海量多元数据的高效管理
1、多元数据：在实际应用中以不同于关系数据模型的数据模型表达的数据。
2、NoSQL数据库：相对于关系型数据库来说，泛指非关系数据库，主要用来存储和管理海量多元数据。
3、影响数据库设计的理论和原则：
  CAP理论：
    （1）一致性：系统中某个数据被成功更新后，后续对于数据的读取操作得到的都是更新后的值，无论系统中有多少副本。
    （2）可用性：无论何时，都需为用户提供正常的服务。
    （3）分区容忍性：指在一个分布式数据库中某些节点或某些通信链路失败时，不会影响系统的继续运行。
    备注：大部分NoSQL数据库系统是通过放松对一致性的要求来满足可用性和分区可容忍性的目标，而关系数据库系统则更强调一致性和可用性，因此分区容忍
    的能力不够。
  ACID理论：
    （1）原子性：一个事务的所有操作，要么全部完成，要么全部不完成，不会停滞在中间某个环节。事务在执行过程中发生错误，会被回滚到事务开始前的
    状态。
    （2）一致性：在事务开始之前和事务结束之后，数据库的完整性约束没有被破坏。
    （3）隔离性：两个或多个事务并发访问数据库的同一数据时是独立的，一个事务不可能看到其他事务运行时的中间结果，事务之间不会发生交互。
    （4）持久性：在事务完成之后，该事务对数据库所做的修改便持久地保存在数据库中，不会被回滚。
      备注：ACID原则注重一致性。
  BASE原则：
    （1）Basically Available（基本可用）：支持分区失败
    （2）soft state（柔性状态）：指状态可以有一段时间不同步，存在异步的情况。
    （3）Eventually Consistent(最终一致性)：最终数据保持一致。
4、NoSQL数据模型：K/V数据模型、面向列的数据模型、面向文档的数据模型、面向图的数据模型
  （1）K/V数据模型：key和value均是以字节数组的形式存在，该类型最大的特点就是它的可扩展性。
  （2）面向列的数据模型：按列来组织数据，可以看成是k/v存储的变体。
  （3）面向文档的数据模型：k/v存储模型的变体，文档一般以JSON格式组织，文档之间不存在层次结构。
  （4）面向图的数据模型：专为存储图的相关信息设计的，每个图由节点和节点间的关系组成，节点和关系都有属性。
5、key/value数据存储和管理系统的数据扩展机制
  （1）基于哈希算法的数据扩展机制
    一致性hash算法的优点在于可以很好地适应节点动态加入和退出，被很多分布式key/value数据存储系统用来作为数据扩展的基础。
    区间负责制：在一致性hash算法中，每个节点负责存储环中该节点及其后继节点之间区域对应的存储对象。
    虚拟节点引入来解决负载不均衡的缺点。
  （2）映射表
    数据和存储位置之间的映射关系存放在一个单独的表中，当需要访问某个数据的时候，首先去映射表中查找，找到以后再定位相应节点。
6、HBase数据库系统------被广泛使用的NoSQL数据库系统
  建立在HDFS之上，具有高可靠性、高性能、列存储、可伸缩和实时读写的特点。
  系统架构：
  （1）表和分区：表中的所有行都按照行键的词典顺序排列，当达到一定规模后，表会在行的方向上分割为多个区。
      分区按大小分割，每个表一开始只有一个分区随着数据不断插入表中，分区不断增大，当增大到一个阈值时，分区就会等分为两个新的分区。
  （2）分区和分区服务器
      分区存储在分区服务器上，分区是HBase中分布式存储和负载均衡的最小单元。一个分区不会被拆分到两个不同的分区服务器上。
  （3）分区和存储快
      分区由一个或多个块组成，每个块保存一个列族。每个块又由一个内存块和0至多个块文件组成。
      内存块：放在内存中的块，用来保存修改的块。当内存块的大小达到一个阈值时，内存块会被写入文件，生成一个块文件。HBase中有一个专门的线程
      负责内存块的写操作，块文件以HFile格式保存在HDFS中。
